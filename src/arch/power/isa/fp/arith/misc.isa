 format FloatRCCheckOp {
    72: fmr({{
        uint64_t src2 = Vb_ud[1];
        uint64_t dst = src2;
        Vt_ud[1] = dst;
    }});
    264: fabs({{
        uint64_t src2 = Vb_ud[1];
        uint64_t dst = src2;
        dst = insertBits(dst, 63, 0);
        Vt_ud[1] = dst;
    }});
    136: fnabs({{
        uint64_t src2 = Vb_ud[1];
        uint64_t dst = src2;
        dst = insertBits(dst, 63, 1);
        Vt_ud[1] = dst;
    }});
    40: fneg({{
        uint64_t src2 = Vb_ud[1];
        uint64_t dst = src2 ^ 0x8000000000000000ULL;
        Vt_ud[1] = dst;
    }});
    8: fcpsgn({{
        uint64_t src1 = Va_ud[0];
        uint64_t src2 = Vb_ud[1];
        uint64_t dst = src2;
        dst = insertBits(dst, 63, src1<63:63>);
        Vt_ud[1] = dst;
    }});
}

format CondMoveOp {
    64: mcrfs({{
        uint32_t crBfa = bits(FPSCR, 31 - bfa*4, 28 - bfa*4);
        CR = insertBits(CR, 31 - bf*4, 28 - bf*4, crBfa);
        Fpscr fpscr = FPSCR;
        switch (bfa) {
            case 0:
                fpscr.fx = 0;
                fpscr.ox = 0;
                break;
            case 1:
                fpscr.ux = 0;
                fpscr.zx = 0;
                fpscr.xx = 0;
                fpscr.vxsnan = 0;
                break;
            case 2:
                fpscr.vxisi = 0;
                fpscr.vxidi = 0;
                fpscr.vxzdz = 0;
                fpscr.vximz = 0;
                break;
            case 3:
                fpscr.vxvc = 0;
                break;
            case 5:
                fpscr.vxsoft = 0;
                fpscr.vxsqrt = 0;
                fpscr.vxcvi = 0;
                break;
            default:
                break;
        }
        FPSCR = fpscr;
    }});
}
