format VsxFloatArithOp {

    // TODO TEST FAILED
    43:xscmpodp({{
        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        bool vxsnan_flag = 0;
        vxsnan_flag = isSnan(VSa_df[1]) | isSnan(VSb_df[1]);
        uint32_t c;
        uint64_t *pa, *pb;
        pa = (uint64_t *)&VSa_df[1];
        pb = (uint64_t *)&VSb_df[1];
        std::tie(reg_fpscr, c) = bfp64_COMPARE_ORDER(VSa_df[1], VSb_df[1], reg_fpscr);
        FPSCR = reg_fpscr;
        CR = insertCRField(CR, BF, c);
    }}); 

    // TODO TEST FAILED
    35:xscmpudp({{
        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        bool vxsnan_flag = 0;
        vxsnan_flag = isSnan(VSa_df[1]) | isSnan(VSb_df[1]);
        uint32_t c;

        uint64_t *pa, *pb;
        pa = (uint64_t *)&VSa_df[1];
        pb = (uint64_t *)&VSb_df[1];
        std::tie(reg_fpscr, c) = bfp64_COMPARE_UNORDER(VSa_df[1], VSb_df[1], reg_fpscr);

        FPSCR = reg_fpscr;
        CR = insertCRField(CR, BF, c);
    }}); 

    99:xvcmpeqdp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 2; i++) {
            vxsnan_flag = isSnan(VSa_df[i]) | isSnan(VSb_df[i]);

            if (VSa_df[i] == VSb_df[i]) {
                VSt_ud[i] = 0xFFFFFFFFFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_ud[i] = 0x0000000000000000; 
                all_true = 0;
            }
            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag);

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 

    115:xvcmpgedp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;
        bool vxvc_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 2; i++) {
            if (isSnan(VSa_df[i]) | isSnan(VSb_df[i])) {
                vxsnan_flag = 1;
                if (reg_fpscr.ve == 0)
                    vxvc_flag = 1;
            }
            else
                vxvc_flag = (isQnan(VSa_df[i]) | isQnan(VSb_df[i]));


            if (VSa_df[i] >= VSb_df[i]) {
                VSt_ud[i] = 0xFFFFFFFFFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_ud[i] = 0x0000000000000000; 
                all_true = 0;
            }

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }

            if (vxvc_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxvc = 1;
                FPSCR = reg_fpscr;
            }

            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag) | (reg_fpscr.ve & vxvc_flag);
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 

    107:xvcmpgtdp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;
        bool vxvc_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 2; i++) {
            if (isSnan(VSa_df[i]) | isSnan(VSb_df[i])) {
                vxsnan_flag = 1;
                if (reg_fpscr.ve == 0)
                    vxvc_flag = 1;
            }
            else
                vxvc_flag = (isQnan(VSa_df[i]) | isQnan(VSb_df[i]));


            if (VSa_df[i] > VSb_df[i]) {
                VSt_ud[i] = 0xFFFFFFFFFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_ud[i] = 0x0000000000000000; 
                all_true = 0;
            }

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }

            if (vxvc_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxvc = 1;
                FPSCR = reg_fpscr;
            }

            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag) | (reg_fpscr.ve & vxvc_flag);
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 

    67:xvcmpeqsp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 4; i++) {
            vxsnan_flag = isSnan(VSa_sf[i]) | isSnan(VSb_sf[i]);

            if (VSa_sf[i] == VSb_sf[i]) {
                VSt_uw[i] = 0xFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_uw[i] = 0x00000000; 
                all_true = 0;
            }
            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag);

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 

    83:xvcmpgesp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;
        bool vxvc_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 4; i++) {
            if (isSnan(VSa_sf[i]) | isSnan(VSb_sf[i])) {
                vxsnan_flag = 1;
                if (reg_fpscr.ve == 0)
                    vxvc_flag = 1;
            }
            else
                vxvc_flag = (isQnan(VSa_sf[i]) | isQnan(VSb_sf[i]));


            if (VSa_sf[i] >= VSb_sf[i]) {
                VSt_uw[i] = 0xFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_uw[i] = 0x00000000; 
                all_true = 0;
            }

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }

            if (vxvc_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxvc = 1;
                FPSCR = reg_fpscr;
            }

            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag) | (reg_fpscr.ve & vxvc_flag);
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 

    75:xvcmpgtsp({{
        uint32_t ex_flag = 0;
        uint32_t all_true = 1;
        uint32_t all_false = 1;
        bool vxsnan_flag = 0;
        bool vxvc_flag = 0;

        // reset_xflags()
        Fpscr reg_fpscr = FPSCR;
        reg_fpscr.vxsnan = 0;
        reg_fpscr.vximz  = 0;
        reg_fpscr.vxidi  = 0;
        reg_fpscr.vxisi  = 0;
        reg_fpscr.vxzdz  = 0;
        reg_fpscr.vxsqrt = 0;
        reg_fpscr.vxcvi  = 0;
        reg_fpscr.vxvc   = 0;
        reg_fpscr.ox     = 0;
        reg_fpscr.ux     = 0;
        reg_fpscr.xx     = 0;
        reg_fpscr.zx     = 0;
        FPSCR = reg_fpscr;

        for (auto i = 0; i < 4; i++) {
            if (isSnan(VSa_sf[i]) | isSnan(VSb_sf[i])) {
                vxsnan_flag = 1;
                if (reg_fpscr.ve == 0)
                    vxvc_flag = 1;
            }
            else
                vxvc_flag = (isQnan(VSa_sf[i]) | isQnan(VSb_sf[i]));


            if (VSa_sf[i] > VSb_sf[i]) {
                VSt_uw[i] = 0xFFFFFFFF; 
                all_false = 0;
            }
            else {
                VSt_uw[i] = 0x00000000; 
                all_true = 0;
            }

            if (vxsnan_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxsnan = 1;
                FPSCR = reg_fpscr;
            }

            if (vxvc_flag) {
                reg_fpscr = FPSCR;
                reg_fpscr.fx = 1;
                reg_fpscr.vx = 1; 
                reg_fpscr.vxvc = 1;
                FPSCR = reg_fpscr;
            }

            ex_flag = ex_flag | (reg_fpscr.ve & vxsnan_flag) | (reg_fpscr.ve & vxvc_flag);
        }

        if (RC21)
            if (!ex_flag)
                CR = insertCRField(CR, 6, ((all_true << 3) | (all_false << 1)));
    }}); 
}
